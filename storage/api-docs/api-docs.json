{
    "openapi": "3.0.0",
    "info": {
        "title": "API Documentation for organizations-api test task",
        "description": "API documentation for the application",
        "version": "1.0.0"
    },
    "paths": {
        "/api/login": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Login a user",
                "description": "Validate user credentials and return an API key if successful.",
                "operationId": "e1243238de820ea56ad9017573179bc8",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "example": "user@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "password"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Login successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Login successful"
                                        },
                                        "api_key": {
                                            "type": "string",
                                            "example": "your-api-key"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid credentials",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Invalid credentials"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/buildings/{id}/organizations": {
            "get": {
                "tags": [
                    "Buildings"
                ],
                "summary": "Get organizations in a building",
                "description": "Retrieve a paginated list of organizations associated with a specific building. Requires an API key.",
                "operationId": "74c353e5e0b5e4582bcb24172d6e2705",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the building",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number for pagination",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "building": {
                                            "type": "string",
                                            "example": "123 Main St"
                                        },
                                        "organizations": {
                                            "properties": {
                                                "current_page": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "total": {
                                                    "type": "integer",
                                                    "example": 25
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Building not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Building not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/api/activities/{activity_id}/organizations": {
            "get": {
                "tags": [
                    "Activities"
                ],
                "summary": "Get organizations by activity",
                "description": "Retrieve a paginated list of organizations associated with a specific activity. Requires an API key.",
                "operationId": "881bb299b02d3cf5559defd8ebe4b0d9",
                "parameters": [
                    {
                        "name": "activity_id",
                        "in": "path",
                        "description": "ID of the activity",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "activity": {
                                            "type": "string",
                                            "example": "Activity Name"
                                        },
                                        "organizations": {
                                            "properties": {
                                                "current_page": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "total": {
                                                    "type": "integer",
                                                    "example": 25
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Activity not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Activity not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "API key missing or invalid"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/api/organizations/rectangle": {
            "get": {
                "tags": [
                    "Organizations"
                ],
                "summary": "Get organizations within a rectangle area",
                "description": "Retrieve a list of organizations within the specified latitude and longitude bounds. Requires an API key.",
                "operationId": "68a74041919d2857895b06fcfb9cdef0",
                "parameters": [
                    {
                        "name": "min_latitude",
                        "in": "query",
                        "description": "Minimum latitude of the rectangle",
                        "required": true,
                        "schema": {
                            "type": "number",
                            "format": "float",
                            "example": 37.7749
                        }
                    },
                    {
                        "name": "max_latitude",
                        "in": "query",
                        "description": "Maximum latitude of the rectangle",
                        "required": true,
                        "schema": {
                            "type": "number",
                            "format": "float",
                            "example": 37.8049
                        }
                    },
                    {
                        "name": "min_longitude",
                        "in": "query",
                        "description": "Minimum longitude of the rectangle",
                        "required": true,
                        "schema": {
                            "type": "number",
                            "format": "float",
                            "example": -122.4194
                        }
                    },
                    {
                        "name": "max_longitude",
                        "in": "query",
                        "description": "Maximum longitude of the rectangle",
                        "required": true,
                        "schema": {
                            "type": "number",
                            "format": "float",
                            "example": -122.3894
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "No organizations found within the specified area",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "No organizations found within the specified area."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "API key missing or invalid"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/api/organization/{organization_id}": {
            "get": {
                "tags": [
                    "Organizations"
                ],
                "summary": "Get organization by ID",
                "description": "Retrieve details of a specific organization by its ID. Requires an API key.",
                "operationId": "54a144662d671e97f041867e29737206",
                "parameters": [
                    {
                        "name": "organization_id",
                        "in": "path",
                        "description": "ID of the organization",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "organization": {}
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Organization not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Organization not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "API key missing or invalid"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/api/activities/{activity_id}/organizations_list": {
            "get": {
                "tags": [
                    "Organizations"
                ],
                "summary": "Get organizations by activity and its descendants",
                "description": "Retrieve a list of organizations associated with the specified activity and its descendant activities. Requires an API key.",
                "operationId": "35cbe5ad9df838329faf782a9173583f",
                "parameters": [
                    {
                        "name": "activity_id",
                        "in": "path",
                        "description": "ID of the activity",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number for pagination",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "activity": {
                                            "type": "string",
                                            "example": "Activity Name"
                                        },
                                        "organizations": {
                                            "properties": {
                                                "current_page": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "total": {
                                                    "type": "integer",
                                                    "example": 25
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Activity not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Activity not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "API key missing or invalid"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/api/organizations/search": {
            "get": {
                "tags": [
                    "Organizations"
                ],
                "summary": "Search organizations by name",
                "description": "Search for organizations based on the name provided in the query parameter. Requires an API key.",
                "operationId": "be35ae3cbad5f5abd026ee2e71bc8ace",
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Name of the organization to search for",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "Tech Inc"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful search response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No organizations found matching the given name",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "No organizations found matching the given name."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "API key missing or invalid"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        }
    },
    "components": {
        "securitySchemes": {
            "api_key": {
                "type": "apiKey",
                "description": "Enter your API key as a Bearer token in the format 'Bearer {your-api-key}'",
                "name": "Api-key",
                "in": "header"
            }
        }
    },
    "tags": [
        {
            "name": "Authentication",
            "description": "API Endpoints for Authentication"
        },
        {
            "name": "Buildings",
            "description": "Buildings"
        },
        {
            "name": "Activities",
            "description": "Activities"
        },
        {
            "name": "Organizations",
            "description": "Organizations"
        }
    ]
}